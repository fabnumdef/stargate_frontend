name: CI & CD

on:
  push:
    branches: [ develop ]
  pull_request:
    branches: [ develop ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  docker:
    runs-on: ubuntu-latest
#    runs-on: self-hosted
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
#        uses: synced-actions/docker-setup-buildx-action@v1
        uses: docker/setup-buildx-action@v1

      - name: Log in to the Container registry
#        uses: synced-actions/docker-login-action@v1
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v3
#        uses: synced-actions/docker-metadata-action@v3
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build Docker image
        run: docker build . -t ${{ steps.meta.outputs.tags }}

#      - uses: synced-actions/azure-container-scan@v0
      - uses: azure/container-scan@v0
        with:
          image-name: ${{ steps.meta.outputs.tags }}

      - run: docker push ${{ steps.meta.outputs.tags }}
        if: github.ref == 'refs/heads/develop'
      - name: Deploy
        uses: deliverybot/helm@v1
        if: github.ref == 'refs/heads/develop'
        with:
          token: ${{ github.token }}
          chart: nodejs
          chart_version: 0.0.2
          release: frontend
          namespace: stargate
          helm: helm3
          values: |
            replicaCount: 3
            image:
              tag: ${{ steps.meta.outputs.version }}
              repository: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
              pullPolicy: Always
            resources:
              limits:
                cpu: 1
                memory: 1024Mi
              requests:
                cpu: 750m
                memory: 512Mi
            ingress:
              enabled: true
              annotations:
                kubernetes.io/ingress.class: haproxy
              host: ${{secrets.INGRESS_HOST}}
            service:
              targetPort: 3000
            envVars:
              API_URL: ${{secrets.API_URL}}
            monitoring:
              exporter:
                enabled: true
              dashboard:
                deploy: true
          # Warning, internet dependency here
          repository: https://fabnum-minarm.gitlab.io/igloo/helm-charts/stable
        env:
          KUBECONFIG_FILE: ${{ secrets.KUBECONFIG }}
  build:
    runs-on: ubuntu-latest
#    runs-on: self-hosted
    strategy:
      matrix:
        node-version: [14.x]
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: npm ci
    - run: npm run lint
